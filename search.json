[{"path":"https://worldbank.github.io/dlw/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 dlw authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://worldbank.github.io/dlw/articles/dlw.html","id":"token","dir":"Articles","previous_headings":"","what":"Token","title":"dlw","text":"begin working dlw, must provide datalibweb API token using dlw_set_token() function. can obtain renew token visiting datalibweb page following instructions . token, set R session follows: [COMPLETE]","code":"dlw_set_token(\"your_token_here\")"},{"path":"https://worldbank.github.io/dlw/articles/gmd_collection.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"GMD Collection","text":"Global Monitoring Database (GMD) World Bank’s central repository harmonized, multitopic household income expenditure surveys. surveys, collected national statistical offices, compiled processed Data Goals (D4G) team, support regional statistics teams Poverty Equity Global Practice. Global Poverty & Inequality Data Team (GPID) Development Economics Data Group (DECDG) also contributes historical external data, including Luxembourg Income Study (LIS). GMD harmonizes key variables enable meaningful comparisons poverty sociodemographic trends across countries time. microdata underpin major World Bank initiatives, including Poverty Inequality Platform (PIP), Multidimensional Poverty Measure (WB MPM), Global Database Shared Prosperity (GDSP), Poverty, Prosperity Planet Reports.","code":"# devtools::load_all(\".\") library(dlw)"},{"path":"https://worldbank.github.io/dlw/articles/gmd_collection.html","id":"gmd-server","dir":"Articles","previous_headings":"","what":"GMD server","title":"GMD Collection","text":"Datalibweb system organized several servers, hosting one collections data. example, GMD collection hosted GMD server, can confusing since collection server share name. explore catalog data available server, use dlw_server_catalog(). specify server, default dlw_server_catalog(server = \"GMD\"). catalog contains metadata required download dataset GMD collection, provided necessary access rights. example, let’s examine data available Paraguay 2020 within GPWG module: Notice three different versions available survey. download specific version, must explicitly provide required arguments dlw_get_data() function, main function downloading data dlw package. example:","code":"ctl <- dlw_server_catalog(server = \"GMD\") #> ℹ Returning ServerCatalog_GMD from .dlwevn names(ctl) #>  [1] \"ServerAlias\"    \"Country\"        \"Year\"           \"Survey\"         #>  [5] \"FilePath\"       \"Ext\"            \"FileSize\"       \"Timestamp\"      #>  [9] \"Checksum\"       \"FileName\"       \"Country_code\"   \"Survey_year\"    #> [13] \"Survey_acronym\" \"Vermast\"        \"Veralt\"         \"Collection\"     #> [17] \"Module\"         \"ext\" # Variables to display vars_to_see <- c(\"FileName\", \"Country_code\", \"Survey_year\", \"Survey_acronym\", \"Vermast\", \"Veralt\")  # The dlw package fully imports data.table, so you can use its syntax directly ctl[Country_code == \"PRY\" & Year == 2020 & Module == \"GPWG\", ..vars_to_see] #>                                 FileName Country_code Survey_year #>                                   <char>       <char>      <char> #> 1: PRY_2020_EPH_V01_M_V03_A_GMD_GPWG.dta          PRY        2020 #> 2: PRY_2020_EPH_V01_M_V02_A_GMD_GPWG.dta          PRY        2020 #> 3: PRY_2020_EPH_V01_M_V01_A_GMD_GPWG.dta          PRY        2020 #>    Survey_acronym Vermast Veralt #>            <char>  <char> <char> #> 1:            EPH     V01    V03 #> 2:            EPH     V01    V02 #> 3:            EPH     V01    V01 dlw_get_data(   country_code = \"PRY\",   year = 2020L,   server = \"GMD\",   survey = \"EPH\",   module = \"GPWG\",   filename = \"PRY_2020_EPH_V01_M_V03_A_GMD_GPWG.dta\",   collection = \"GMD\" )"},{"path":"https://worldbank.github.io/dlw/articles/gmd_collection.html","id":"downloading-data","dir":"Articles","previous_headings":"","what":"Downloading data","title":"GMD Collection","text":"specifying arguments necessary, since Datalibweb API requires , can tedious. simplify process, dlw_get_gmd() function acts convenient wrapper around dlw_get_data(). dlw_get_gmd(), need provide country code, year, module, automatically download recent version data . Notice dlw_get_gmd() prints actual call dlw_get_data() console reference verification.","code":"pry20 <- dlw_get_gmd(country_code = \"PRY\", year = 2020, module = \"GPWG\") #>  #> ── dlw_get_data Calls ───────────────────────────────────────────────────────── #> Call 1: #> dlw_get_data( #>   country_code = \"PRY\", #>   year = 2020L, #>   server = \"GMD\", #>   survey = \"EPH\", #>   module = \"GPWG\", #>   filename = \"PRY_2020_EPH_V01_M_V03_A_GMD_GPWG.dta\", #>   collection = \"GMD\" #> )"},{"path":"https://worldbank.github.io/dlw/articles/gmd_collection.html","id":"all-versions","dir":"Articles","previous_headings":"Downloading data","what":"All versions","title":"GMD Collection","text":"default, dlw_get_gmd() returns recent version data particular year. However, set argument latest_version = FALSE, function instead return list calls—one survey version available year. allows review select specific version wish download.","code":"calls_pry20 <- dlw_get_gmd(country_code = \"PRY\",                      year = 2020,                      module = \"GPWG\",                      latest_version = FALSE) #> → your arguments do not uniquely identify a dataset. #> You need execute one of the following: #>  #> ── dlw_get_data Calls ───────────────────────────────────────────────────────── #> Call 1: #> dlw_get_data( #>   country_code = \"PRY\", #>   year = 2020L, #>   server = \"GMD\", #>   survey = \"EPH\", #>   module = \"GPWG\", #>   filename = \"PRY_2020_EPH_V01_M_V03_A_GMD_GPWG.dta\", #>   collection = \"GMD\" #> ) #> Call 2: #> dlw_get_data( #>   country_code = \"PRY\", #>   year = 2020L, #>   server = \"GMD\", #>   survey = \"EPH\", #>   module = \"GPWG\", #>   filename = \"PRY_2020_EPH_V01_M_V02_A_GMD_GPWG.dta\", #>   collection = \"GMD\" #> ) #> Call 3: #> dlw_get_data( #>   country_code = \"PRY\", #>   year = 2020L, #>   server = \"GMD\", #>   survey = \"EPH\", #>   module = \"GPWG\", #>   filename = \"PRY_2020_EPH_V01_M_V01_A_GMD_GPWG.dta\", #>   collection = \"GMD\" #> )"},{"path":"https://worldbank.github.io/dlw/articles/gmd_collection.html","id":"most-recent-year","dir":"Articles","previous_headings":"Downloading data","what":"Most recent year","title":"GMD Collection","text":"specify year, dlw_get_gmd() return calls surveys available given country module. want retrieve recent year (may differ country module), set latest_year = TRUE. ensure get latest available data selection.","code":"pry23 <- dlw_get_gmd(country_code = \"PRY\",                      module = \"GPWG\",                      latest_year = TRUE) #>  #> ── dlw_get_data Calls ───────────────────────────────────────────────────────── #> Call 1: #> dlw_get_data( #>   country_code = \"PRY\", #>   year = 2023L, #>   server = \"GMD\", #>   survey = \"EPHC\", #>   module = \"GPWG\", #>   filename = \"PRY_2023_EPHC_V01_M_V01_A_GMD_GPWG.dta\", #>   collection = \"GMD\" #> )"},{"path":"https://worldbank.github.io/dlw/articles/gmd_collection.html","id":"old-version","dir":"Articles","previous_headings":"Downloading data","what":"Old version","title":"GMD Collection","text":"possible , depending country module, may need access older version data. cases, can specify veralt argument indicate version want download. example, want download second version Paraguay 2020 survey, can follows:","code":"pry20_v2 <- dlw_get_gmd(country_code = \"PRY\",                      year = 2020,                      module = \"GPWG\",                      veralt = \"v02\") #>  #> ── dlw_get_data Calls ───────────────────────────────────────────────────────── #> Call 1: #> dlw_get_data( #>   country_code = \"PRY\", #>   year = 2020L, #>   server = \"GMD\", #>   survey = \"EPH\", #>   module = \"GPWG\", #>   filename = \"PRY_2020_EPH_V01_M_V02_A_GMD_GPWG.dta\", #>   collection = \"GMD\" #> )"},{"path":"https://worldbank.github.io/dlw/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"R.Andres Castaneda. Author, maintainer.","code":""},{"path":"https://worldbank.github.io/dlw/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Castaneda R (2025). dlw: R Client internal Datalibweb API World Bank. R package version 0.1.0.9006, https://github.com/worldbank/dlw.","code":"@Manual{,   title = {dlw: R Client for the internal Datalibweb API of the World Bank},   author = {R.Andres Castaneda},   year = {2025},   note = {R package version 0.1.0.9006},   url = {https://github.com/worldbank/dlw}, }"},{"path":"https://worldbank.github.io/dlw/index.html","id":"dlw","dir":"","previous_headings":"","what":"R Client for the internal Datalibweb API of the World Bank","title":"R Client for the internal Datalibweb API of the World Bank","text":"dlw R client internal datalibweb API World Bank. Datalibweb data system designed enable users seamlessly access microdata documentation World Bank. Users can access --date historical versions harmonized data collections raw/non-harmonized data subsequent analysis","code":""},{"path":"https://worldbank.github.io/dlw/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Client for the internal Datalibweb API of the World Bank","text":"Since dlw hosted World Bank’s GitHub organization, need authorize Personal Access Token (PAT) SAML Single Sign-(SSO) can install . Follow steps authorize PAT: Go GitHub account: Visit https://github.com log . Check PAT: Go Settings → Developer settings → Personal access tokens. Find token using (create new one needed). Authorize PAT SAML SSO: Go https://github.com/settings/tokens. Next token, ’ll see button says “Configure SSO.” Click authorize token worldbank. Try installing can install development version dlw GitHub :","code":"# install.packages(\"pak\") pak::pak(\"worldbank/dlw\") # or remotes::github_install(\"worldbank/dlw\")"},{"path":"https://worldbank.github.io/dlw/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"R Client for the internal Datalibweb API of the World Bank","text":"","code":"library(dlw)"},{"path":"https://worldbank.github.io/dlw/index.html","id":"token","dir":"","previous_headings":"Usage","what":"Token","title":"R Client for the internal Datalibweb API of the World Bank","text":"begin working dlw, must provide datalibweb API token using dlw_set_token() function. can obtain renew token visiting datalibweb page following instructions . token, set R session follows:","code":"dlw_set_token(\"your_token_here\")"},{"path":"https://worldbank.github.io/dlw/index.html","id":"server-catalob","dir":"","previous_headings":"Usage","what":"server catalob","title":"R Client for the internal Datalibweb API of the World Bank","text":"setting token, can download catalog corresponding server using dlw_server_catalog(). default, downloads “GMD” catalog. downloaded catalog saved current session hidden environment within dlw package, allowing easy efficient access subsequent operations. dlw package returns results data.table objects, enabling lightning-fast data manipulation filtering using concise syntax. example, can instantly list available files Colombia 2010 module “” GMD collection single line code:","code":"ctl <- dlw_server_catalog() #> Pruning cache #> ℹ saving ServerCatalog_GMD in .dlwevn ctl[Country_code == \"COL\" & Module == \"ALL\" & Survey_year == 2010,    .(FileName, Vermast, Veralt )] #>                                 FileName Vermast Veralt #>                                   <char>  <char> <char> #> 1: COL_2010_GEIH_V02_M_V09_A_GMD_ALL.dta     V02    V09 #> 2: COL_2010_GEIH_V02_M_V08_A_GMD_ALL.dta     V02    V08 #> 3: COL_2010_GEIH_v02_M_v07_A_GMD_ALL.dta     v02    v07"},{"path":"https://worldbank.github.io/dlw/index.html","id":"downloading-files","dir":"","previous_headings":"Usage","what":"Downloading files","title":"R Client for the internal Datalibweb API of the World Bank","text":"workhorse function download data dlw_get_data(). However, requires several pieces information may hand, : simplify process, developed wrapper function works GMD server: dlw_get_gmd(). function much easier use: interested downloading recent version file, can simply omit version arguments: case, recent version available used (example, master version v02 alternative version v01).","code":"dlw_get_data(   country_code = \"PRY\",   year = 2011L,   server = \"GMD\",   survey = \"EPH\",   module = \"GPWG\",   filename = \"PRY_2011_EPH_V01_M_V03_A_GMD_GPWG.dta\",   collection = \"GMD\" ) pry <- dlw_get_gmd(country_code = \"PRY\", year = 2011, module = \"GPWG\", vermast = \"v01\", veralt = \"v03\") #>  #> ── dlw_get_data Calls ────────────────────────────────────────────────────────── #> Call 1: #> dlw_get_data( #>   country_code = \"PRY\", #>   year = 2011L, #>   server = \"GMD\", #>   survey = \"EPH\", #>   module = \"GPWG\", #>   filename = \"PRY_2011_EPH_V01_M_V03_A_GMD_GPWG.dta\", #>   collection = \"GMD\" #> ) #> ℹ saving last_req in .dlwevn #> ℹ saving last_raw_data in .dlwevn #> Creating new version '20250617T202722Z-662d2' #> Writing to pin 'PRY_2011_EPH_V01_M_V03_A_GMD_GPWG.parquet' pry[, weighted.mean(welfare, weight, na.rm = TRUE)] #> [1] 1099527 pry <- dlw_get_gmd(country_code = \"PRY\", year = 2011, module = \"GPWG\") #>  #> ── dlw_get_data Calls ────────────────────────────────────────────────────────── #> Call 1: #> dlw_get_data( #>   country_code = \"PRY\", #>   year = 2011L, #>   server = \"GMD\", #>   survey = \"EPH\", #>   module = \"GPWG\", #>   filename = \"PRY_2011_EPH_V02_M_V01_A_GMD_GPWG.dta\", #>   collection = \"GMD\" #> ) #> ℹ saving last_req in .dlwevn #> ℹ saving last_raw_data in .dlwevn #> Creating new version '20250617T202725Z-6bd54' #> Writing to pin 'PRY_2011_EPH_V02_M_V01_A_GMD_GPWG.parquet' pry[, weighted.mean(welfare, weight, na.rm = TRUE)] #> [1] 12675293"},{"path":"https://worldbank.github.io/dlw/reference/abort_dlw_error.html","id":null,"dir":"Reference","previous_headings":"","what":"return information of error — abort_dlw_error","title":"return information of error — abort_dlw_error","text":"return information error","code":""},{"path":"https://worldbank.github.io/dlw/reference/abort_dlw_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"return information of error — abort_dlw_error","text":"","code":"abort_dlw_error(info)"},{"path":"https://worldbank.github.io/dlw/reference/abort_dlw_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"return information of error — abort_dlw_error","text":"info csv file least one variable \"error\" name.","code":""},{"path":"https://worldbank.github.io/dlw/reference/abort_dlw_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"return information of error — abort_dlw_error","text":"error","code":""},{"path":"https://worldbank.github.io/dlw/reference/add_gmd_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Add GMD vars to GMD server catalog — add_gmd_vars","title":"Add GMD vars to GMD server catalog — add_gmd_vars","text":"Add GMD vars GMD server catalog","code":""},{"path":"https://worldbank.github.io/dlw/reference/add_gmd_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add GMD vars to GMD server catalog — add_gmd_vars","text":"","code":"add_gmd_vars(ctl)"},{"path":"https://worldbank.github.io/dlw/reference/add_gmd_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add GMD vars to GMD server catalog — add_gmd_vars","text":"ctl data.table server catalog raw","code":""},{"path":"https://worldbank.github.io/dlw/reference/add_gmd_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add GMD vars to GMD server catalog — add_gmd_vars","text":"data.table variables","code":""},{"path":"https://worldbank.github.io/dlw/reference/build_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Build request version 2 — build_request","title":"Build request version 2 — build_request","text":"Build request version 2","code":""},{"path":"https://worldbank.github.io/dlw/reference/build_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build request version 2 — build_request","text":"","code":"build_request(   dlw_url = NULL,   api_version = getOption(\"dlw.default_api_version\"),   endpoint,   method = \"GET\",   store_request = TRUE,   ... )"},{"path":"https://worldbank.github.io/dlw/reference/build_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build request version 2 — build_request","text":"dlw_url character: case one url. api_version character: API version endpoint character: dlw  API endpoint method character: method http request. Either \"GET\" \"POST\". Default \"GET\". store_request logical: store request .dlwenv `last_req` ... parameters","code":""},{"path":"https://worldbank.github.io/dlw/reference/build_request.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build request version 2 — build_request","text":"httr2 request","code":""},{"path":"https://worldbank.github.io/dlw/reference/dlw-package.html","id":null,"dir":"Reference","previous_headings":"","what":"dlw: R Client for the internal Datalibweb API of the World Bank — dlw-package","title":"dlw: R Client for the internal Datalibweb API of the World Bank — dlw-package","text":"(maybe one line). Continuation lines indented.","code":""},{"path":[]},{"path":"https://worldbank.github.io/dlw/reference/dlw-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dlw: R Client for the internal Datalibweb API of the World Bank — dlw-package","text":"Maintainer: R.Andres Castaneda acastanedaa@worldbank.org","code":""},{"path":"https://worldbank.github.io/dlw/reference/dlw_country_catalog.html","id":null,"dir":"Reference","previous_headings":"","what":"Get country catalog — dlw_country_catalog","title":"Get country catalog — dlw_country_catalog","text":"Get country catalog","code":""},{"path":"https://worldbank.github.io/dlw/reference/dlw_country_catalog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get country catalog — dlw_country_catalog","text":"","code":"dlw_country_catalog(   country_code,   dlw_url = NULL,   api_version = getOption(\"dlw.default_api_version\"),   force = FALSE,   internal = FALSE,   verbose = getOption(\"dlw.verbose\"),   store_request = FALSE )"},{"path":"https://worldbank.github.io/dlw/reference/dlw_country_catalog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get country catalog — dlw_country_catalog","text":"country_code character: ISO3 code dlw_url character: case one url. api_version character: API version force logical: TRUE, query API regardless whether version available .dlwenv internal logical: internal use . verbose logical: whether display info store_request logical: store request .dlwenv `last_req`","code":""},{"path":"https://worldbank.github.io/dlw/reference/dlw_country_catalog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get country catalog — dlw_country_catalog","text":"data.table country catalog","code":""},{"path":[]},{"path":"https://worldbank.github.io/dlw/reference/dlw_country_catalog.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get country catalog — dlw_country_catalog","text":"","code":"if (FALSE) { # \\dontrun{ dlw_country_catalog(\"COL\") } # }"},{"path":"https://worldbank.github.io/dlw/reference/dlw_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download data from datalibweb and save as a pin — dlw_download","title":"Download data from datalibweb and save as a pin — dlw_download","text":"Download data datalibweb save pin","code":""},{"path":"https://worldbank.github.io/dlw/reference/dlw_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download data from datalibweb and save as a pin — dlw_download","text":"","code":"dlw_download(   country_code,   filename,   board,   pin_name,   format,   server = NULL,   ...,   verbose = getOption(\"dlw.verbose\") )"},{"path":"https://worldbank.github.io/dlw/reference/dlw_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download data from datalibweb and save as a pin — dlw_download","text":"country_code character: ISO3 code filename character: Name file save/read (required) board pins board object (returned dlw_download) pin_name name pin (returned dlw_download) format character: File format use pinning data ('qs' [default] 'parquet') server character: case one server. default  GMD ... additional filtering arguments (e.g.,survey_year, survey_acronym, vermast, veralt, collection, module) verbose logical: whether display info","code":""},{"path":"https://worldbank.github.io/dlw/reference/dlw_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download data from datalibweb and save as a pin — dlw_download","text":"list board pin_name used","code":""},{"path":"https://worldbank.github.io/dlw/reference/dlw_get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data from datalibweb (refactored) — dlw_get_data","title":"Get data from datalibweb (refactored) — dlw_get_data","text":"Get data datalibweb (refactored)","code":""},{"path":"https://worldbank.github.io/dlw/reference/dlw_get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data from datalibweb (refactored) — dlw_get_data","text":"","code":"dlw_get_data(   country_code,   filename,   server = NULL,   local_dir = getOption(\"dlw.local_dir\"),   local = fs::is_dir(local_dir),   format = getOption(\"dlw.format\"),   local_overwrite = FALSE,   version = NULL,   verbose = getOption(\"dlw.verbose\"),   ... )"},{"path":"https://worldbank.github.io/dlw/reference/dlw_get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data from datalibweb (refactored) — dlw_get_data","text":"country_code character: ISO3 code filename character: Name file save/read (required) server character: case one server. default  GMD local_dir character: Local directory save data. Default available option dlw.local_dir set initially \"\". local logical: whether save read data locally. default TRUE `local_dir` exists. format character: File format use pinning data ('parquet' [default] 'qs') local_overwrite logical. Whether overwrite saved data. Default FALSE version numeric: Version pin read (pinning data retrieval ) verbose logical: whether display info ... additional filtering arguments (e.g.,survey_year, survey_acronym, vermast, veralt, collection, module)","code":""},{"path":"https://worldbank.github.io/dlw/reference/dlw_get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data from datalibweb (refactored) — dlw_get_data","text":"data base request data.table","code":""},{"path":"https://worldbank.github.io/dlw/reference/dlw_get_gmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Get GMD data. — dlw_get_gmd","title":"Get GMD data. — dlw_get_gmd","text":"wrapper dlw_get_data. just build calls dlw_get_data, ease use.","code":""},{"path":"https://worldbank.github.io/dlw/reference/dlw_get_gmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get GMD data. — dlw_get_gmd","text":"","code":"dlw_get_gmd(   country_code,   year = NULL,   module = NULL,   survey = NULL,   filename = NULL,   vermast = NULL,   veralt = NULL,   latest_version = TRUE,   latest_year = FALSE,   verbose = getOption(\"dlw.verbose\"),   ... )"},{"path":"https://worldbank.github.io/dlw/reference/dlw_get_gmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get GMD data. — dlw_get_gmd","text":"country_code character: ISO3 code year numeric: four digit year module character: module GMD collection (e.g., , GPWG, L) survey character: survey acronyn filename character: File name vermast character: Version master data form \"vXX\" X number two digits like \"01\" \"02\". veralt character: Version alternative  data form \"vXX\" X number two digits like \"01\" \"02\". latest_version logical: TRUE  `vermast` `veralt` NULL, use recent version data particular year. latest_year logical: `TRUE`  `year` NULL, retrieves recent year. Otherwise, return calls years available. default. verbose logical: whether display info ... Arguments passed dlw_get_data local_dir character: Local directory save data. Default available option dlw.local_dir set initially \"\". local logical: whether save read data locally. default TRUE `local_dir` exists. local_overwrite logical. Whether overwrite saved data. Default FALSE","code":""},{"path":"https://worldbank.github.io/dlw/reference/dlw_get_gmd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get GMD data. — dlw_get_gmd","text":"call unique, return data. ,   return posibilities user choose.","code":""},{"path":[]},{"path":"https://worldbank.github.io/dlw/reference/dlw_get_gmd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get GMD data. — dlw_get_gmd","text":"","code":"if (FALSE) { # \\dontrun{   dlw_get_gmd(\"PRY\", 2010, \"GPWG\") # latest version of 2010   dlw_get_gmd(\"PRY\", module = \"GPWG\") # latest year and latest version } # }"},{"path":"https://worldbank.github.io/dlw/reference/dlw_get_gmd_support.html","id":null,"dir":"Reference","previous_headings":"","what":"get Support files for GMD — dlw_get_gmd_support","title":"get Support files for GMD — dlw_get_gmd_support","text":"get Support files GMD","code":""},{"path":"https://worldbank.github.io/dlw/reference/dlw_get_gmd_support.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get Support files for GMD — dlw_get_gmd_support","text":"","code":"dlw_get_gmd_support(   module = c(\"CPIICP\", \"CPI\"),   vermast = NULL,   verbose = getOption(\"dlw.verbose\") )"},{"path":"https://worldbank.github.io/dlw/reference/dlw_get_gmd_support.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get Support files for GMD — dlw_get_gmd_support","text":"module character: now, either CPIICP (default) CPI. vermast character: Version master data form \"vXX\" X number two digits like \"01\" \"02\". verbose logical: whether display info","code":""},{"path":"https://worldbank.github.io/dlw/reference/dlw_get_gmd_support.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get Support files for GMD — dlw_get_gmd_support","text":"data.table","code":""},{"path":[]},{"path":"https://worldbank.github.io/dlw/reference/dlw_get_gmd_support.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get Support files for GMD — dlw_get_gmd_support","text":"","code":"if (FALSE) { # \\dontrun{ dlw_get_gmd_support() dlw_get_gmd_support(vermast = \"v10\") } # }"},{"path":"https://worldbank.github.io/dlw/reference/dlw_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from a pin (local or temp) — dlw_read","title":"Read data from a pin (local or temp) — dlw_read","text":"Read data pin (local temp)","code":""},{"path":"https://worldbank.github.io/dlw/reference/dlw_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data from a pin (local or temp) — dlw_read","text":"","code":"dlw_read(board, pin_name, version = NULL)"},{"path":"https://worldbank.github.io/dlw/reference/dlw_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data from a pin (local or temp) — dlw_read","text":"board pins board object (returned dlw_download) pin_name name pin (returned dlw_download) version numeric: Version pin read (pinning data retrieval )","code":""},{"path":"https://worldbank.github.io/dlw/reference/dlw_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data from a pin (local or temp) — dlw_read","text":"data.table","code":""},{"path":"https://worldbank.github.io/dlw/reference/dlw_server_catalog.html","id":null,"dir":"Reference","previous_headings":"","what":"Server catalog — dlw_server_catalog","title":"Server catalog — dlw_server_catalog","text":"Server catalog","code":""},{"path":"https://worldbank.github.io/dlw/reference/dlw_server_catalog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Server catalog — dlw_server_catalog","text":"","code":"dlw_server_catalog(   server = NULL,   dlw_url = NULL,   api_version = getOption(\"dlw.default_api_version\"),   force = FALSE,   verbose = getOption(\"dlw.verbose\"),   store_request = FALSE )"},{"path":"https://worldbank.github.io/dlw/reference/dlw_server_catalog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Server catalog — dlw_server_catalog","text":"server character: case one server. default  GMD dlw_url character: case one url. api_version character: API version force logical: TRUE, query API regardless whether version available .dlwenv verbose logical: whether display info store_request logical: store request .dlwenv `last_req`","code":""},{"path":"https://worldbank.github.io/dlw/reference/dlw_server_catalog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Server catalog — dlw_server_catalog","text":"dataframe ","code":""},{"path":[]},{"path":"https://worldbank.github.io/dlw/reference/dlw_server_catalog.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Server catalog — dlw_server_catalog","text":"","code":"if (FALSE) { # \\dontrun{ dlw_server_catalog(sever = \"GMD\") } # }"},{"path":"https://worldbank.github.io/dlw/reference/dlw_server_inventory.html","id":null,"dir":"Reference","previous_headings":"","what":"filter server catolog to show inventory by country and other variables — dlw_server_inventory","title":"filter server catolog to show inventory by country and other variables — dlw_server_inventory","text":"filter server catolog show inventory country variables","code":""},{"path":"https://worldbank.github.io/dlw/reference/dlw_server_inventory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filter server catolog to show inventory by country and other variables — dlw_server_inventory","text":"","code":"dlw_server_inventory(country, server = NULL, ...)"},{"path":"https://worldbank.github.io/dlw/reference/dlw_server_inventory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"filter server catolog to show inventory by country and other variables — dlw_server_inventory","text":"country character. `country_code` [dlw_get_data] purpose easy programming. meant used final user. server character: case one server. default  GMD ... additional filtering arguments (e.g., year, module, survey, fileName)","code":""},{"path":"https://worldbank.github.io/dlw/reference/dlw_server_inventory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"filter server catolog to show inventory by country and other variables — dlw_server_inventory","text":"filter server catalog [dlw_server_catalog]","code":""},{"path":[]},{"path":"https://worldbank.github.io/dlw/reference/dlw_server_inventory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"filter server catolog to show inventory by country and other variables — dlw_server_inventory","text":"","code":"if (FALSE) { # \\dontrun{ dlw_server_inventory(\"COL\", 2010) } # }"},{"path":"https://worldbank.github.io/dlw/reference/dlwenv.html","id":null,"dir":"Reference","previous_headings":"","what":".dlwenv environment — dlwenv","title":".dlwenv environment — dlwenv","text":".dlwenv environment Get function: Returns entire .dlwenv environment Get specific key .dlwenv Setter function: Assign value .dlwenv","code":""},{"path":"https://worldbank.github.io/dlw/reference/dlwenv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".dlwenv environment — dlwenv","text":"","code":"get_dlwenv()  get_from_dlwenv(key, verbose = FALSE)  set_in_dlwenv(key, value, verbose = FALSE)"},{"path":"https://worldbank.github.io/dlw/reference/dlwenv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".dlwenv environment — dlwenv","text":"key character string representing key verbose logical: whether display info value value store .dlwenv","code":""},{"path":"https://worldbank.github.io/dlw/reference/dlwenv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".dlwenv environment — dlwenv","text":".dlwenv environment value associated key .dlwenv assigned value (invisibly)","code":""},{"path":"https://worldbank.github.io/dlw/reference/dlwenv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":".dlwenv environment — dlwenv","text":"","code":"env <- get_dlwenv() set_in_dlwenv(\"example_key\", 42) get_from_dlwenv(\"example_key\") # returns 42 #> [1] 42 set_in_dlwenv(\"example_key\", 42)"},{"path":"https://worldbank.github.io/dlw/reference/dot-dlwenv.html","id":null,"dir":"Reference","previous_headings":"","what":"DLW environment — .dlwenv","title":"DLW environment — .dlwenv","text":"environment stores active  files used internally package.","code":""},{"path":"https://worldbank.github.io/dlw/reference/dot-dlwenv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DLW environment — .dlwenv","text":"","code":".dlwenv"},{"path":"https://worldbank.github.io/dlw/reference/dot-dlwenv.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DLW environment — .dlwenv","text":"object class environment length 0.","code":""},{"path":"https://worldbank.github.io/dlw/reference/eval_gmd_call.html","id":null,"dir":"Reference","previous_headings":"","what":"evaluate GMD call — eval_gmd_call","title":"evaluate GMD call — eval_gmd_call","text":"evaluate GMD call","code":""},{"path":"https://worldbank.github.io/dlw/reference/eval_gmd_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"evaluate GMD call — eval_gmd_call","text":"","code":"eval_gmd_call(calls, verbose = getOption(\"dlw.verbose\"))"},{"path":"https://worldbank.github.io/dlw/reference/eval_gmd_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"evaluate GMD call — eval_gmd_call","text":"calls calls [gmd_calls] verbose logical: whether display info","code":""},{"path":"https://worldbank.github.io/dlw/reference/eval_gmd_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"evaluate GMD call — eval_gmd_call","text":"evaluation","code":""},{"path":[]},{"path":"https://worldbank.github.io/dlw/reference/get_raw_data.html","id":null,"dir":"Reference","previous_headings":"","what":"perform request and get raw data — get_raw_data","title":"perform request and get raw data — get_raw_data","text":"perform request get raw data","code":""},{"path":"https://worldbank.github.io/dlw/reference/get_raw_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"perform request and get raw data — get_raw_data","text":"","code":"get_raw_data(req)"},{"path":"https://worldbank.github.io/dlw/reference/get_raw_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"perform request and get raw data — get_raw_data","text":"req request [build_request]","code":""},{"path":"https://worldbank.github.io/dlw/reference/get_raw_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"perform request and get raw data — get_raw_data","text":"raw data [resp_body_raw]","code":""},{"path":"https://worldbank.github.io/dlw/reference/get_wrk_board.html","id":null,"dir":"Reference","previous_headings":"","what":"Get workign pips board — get_wrk_board","title":"Get workign pips board — get_wrk_board","text":"Get workign pips board","code":""},{"path":"https://worldbank.github.io/dlw/reference/get_wrk_board.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get workign pips board — get_wrk_board","text":"","code":"get_wrk_board(local, local_dir)"},{"path":"https://worldbank.github.io/dlw/reference/get_wrk_board.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get workign pips board — get_wrk_board","text":"local logical: whether save read data locally. default TRUE `local_dir` exists. local_dir character: Local directory save data. Default available option dlw.local_dir set initially \"\".","code":""},{"path":"https://worldbank.github.io/dlw/reference/get_wrk_board.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get workign pips board — get_wrk_board","text":"board (pins) package","code":""},{"path":"https://worldbank.github.io/dlw/reference/gmd_calls.html","id":null,"dir":"Reference","previous_headings":"","what":"get data calls when more than one option. — gmd_calls","title":"get data calls when more than one option. — gmd_calls","text":"get data calls one option.","code":""},{"path":"https://worldbank.github.io/dlw/reference/gmd_calls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get data calls when more than one option. — gmd_calls","text":"","code":"gmd_calls(ctl, country_code, ...)"},{"path":"https://worldbank.github.io/dlw/reference/gmd_calls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get data calls when more than one option. — gmd_calls","text":"ctl data.table [dlw_server_inventory] country_code ISO3","code":""},{"path":"https://worldbank.github.io/dlw/reference/gmd_calls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get data calls when more than one option. — gmd_calls","text":"list possible calls","code":""},{"path":[]},{"path":"https://worldbank.github.io/dlw/reference/handle_resp.html","id":null,"dir":"Reference","previous_headings":"","what":"perform httr2::req_perform and handle errors properly — handle_resp","title":"perform httr2::req_perform and handle errors properly — handle_resp","text":"perform httr2::req_perform handle errors properly perform httr2::req_perform handle errors properly","code":""},{"path":"https://worldbank.github.io/dlw/reference/handle_resp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"perform httr2::req_perform and handle errors properly — handle_resp","text":"","code":"handle_resp(req)  handle_req_perform(req)"},{"path":"https://worldbank.github.io/dlw/reference/handle_resp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"perform httr2::req_perform and handle errors properly — handle_resp","text":"req httr2 request object.","code":""},{"path":"https://worldbank.github.io/dlw/reference/handle_resp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"perform httr2::req_perform and handle errors properly — handle_resp","text":"data.table response CSV. raw vector response   dta. Error otherwise HTTP response.","code":""},{"path":"https://worldbank.github.io/dlw/reference/print.dlw_call_list.html","id":null,"dir":"Reference","previous_headings":"","what":"print gmd calls — print.dlw_call_list","title":"print gmd calls — print.dlw_call_list","text":"print gmd calls","code":""},{"path":"https://worldbank.github.io/dlw/reference/print.dlw_call_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print gmd calls — print.dlw_call_list","text":"","code":"# S3 method for class 'dlw_call_list' print(x, ...)"},{"path":"https://worldbank.github.io/dlw/reference/print.dlw_call_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print gmd calls — print.dlw_call_list","text":"x object used select method. ... arguments passed methods.","code":""},{"path":"https://worldbank.github.io/dlw/reference/query_or_form.html","id":null,"dir":"Reference","previous_headings":"","what":"select between query or form according to method — query_or_form","title":"select between query or form according to method — query_or_form","text":"select query form according method","code":""},{"path":"https://worldbank.github.io/dlw/reference/query_or_form.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"select between query or form according to method — query_or_form","text":"","code":"query_or_form(method = c(\"GET\", \"POST\"))"},{"path":"https://worldbank.github.io/dlw/reference/query_or_form.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"select between query or form according to method — query_or_form","text":"method character: method http request. Either \"GET\" \"POST\". Default \"GET\".","code":""},{"path":"https://worldbank.github.io/dlw/reference/query_or_form.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"select between query or form according to method — query_or_form","text":"correspongin httr2 function","code":""},{"path":"https://worldbank.github.io/dlw/reference/select_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Select base server — select_server","title":"Select base server — select_server","text":"Helper function select server Helper function select collection argument endpoint based server","code":""},{"path":"https://worldbank.github.io/dlw/reference/select_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select base server — select_server","text":"","code":"select_server(server = NULL)  select_collection(server = NULL)"},{"path":"https://worldbank.github.io/dlw/reference/select_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select base server — select_server","text":"server character: c(\"GMD\"). Defaults NULL (ie. GMD).","code":""},{"path":"https://worldbank.github.io/dlw/reference/select_server.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select base server — select_server","text":"character","code":""},{"path":"https://worldbank.github.io/dlw/reference/simpleCap.html","id":null,"dir":"Reference","previous_headings":"","what":"capitalize first letter in each word — simpleCap","title":"capitalize first letter in each word — simpleCap","text":"capitalize first letter word","code":""},{"path":"https://worldbank.github.io/dlw/reference/simpleCap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"capitalize first letter in each word — simpleCap","text":"","code":"simpleCap(s)"},{"path":"https://worldbank.github.io/dlw/reference/simpleCap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"capitalize first letter in each word — simpleCap","text":"s character","code":""},{"path":"https://worldbank.github.io/dlw/reference/simpleCap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"capitalize first letter in each word — simpleCap","text":"first letter work s capitalized","code":""},{"path":"https://worldbank.github.io/dlw/reference/token.html","id":null,"dir":"Reference","previous_headings":"","what":"Datalibweb Token utilities — token","title":"Datalibweb Token utilities — token","text":"Datalibweb Token utilities Store Datalibweb API token securely Retrieve Datalibweb API token, prompt missing/expired Remove/reset Datalibweb API token confirm wither token working correctly","code":""},{"path":"https://worldbank.github.io/dlw/reference/token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Datalibweb Token utilities — token","text":"","code":"dlw_set_token(token)  dlw_get_token(prompt_if_missing = TRUE)  dlw_remove_token()  dlw_test_token(   dlw_url = NULL,   api_version = getOption(\"dlw.default_api_version\"),   verbose = getOption(\"dlw.verbose\") )"},{"path":"https://worldbank.github.io/dlw/reference/token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Datalibweb Token utilities — token","text":"token API token string prompt_if_missing logical: whether prompted store token dlw_url character: case one url. api_version character: API version verbose logical: whether display info","code":""},{"path":"https://worldbank.github.io/dlw/reference/token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Datalibweb Token utilities — token","text":"invisible token TRUE goes well","code":""},{"path":"https://worldbank.github.io/dlw/reference/token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Datalibweb Token utilities — token","text":"","code":"if (FALSE) { # \\dontrun{ dlw_test_token() } # }"}]
